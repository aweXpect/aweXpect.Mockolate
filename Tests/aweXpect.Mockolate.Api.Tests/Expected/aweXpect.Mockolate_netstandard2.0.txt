[assembly: System.Reflection.AssemblyMetadata("RepositoryUrl", "https://github.com/aweXpect/aweXpect.Mockolate.git")]
[assembly: System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName=".NET Standard 2.0")]
namespace aweXpect
{
    public static class ThatVerificationResult
    {
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> AtLeast<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject, aweXpect.Core.Times times) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> AtLeastOnce<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> AtLeastTwice<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> AtMost<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject, aweXpect.Core.Times times) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> AtMostOnce<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> AtMostTwice<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> Exactly<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject, aweXpect.Core.Times times) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> Never<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> Once<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> Then<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject, params System.Func<TMock, Mockolate.Verify.VerificationResult<TMock>>[] interactions) { }
        public static aweXpect.Results.AndOrResult<Mockolate.Verify.VerificationResult<TMock>, aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>>> Twice<TMock>(this aweXpect.Core.IThat<Mockolate.Verify.VerificationResult<TMock>> subject) { }
    }
}